@include "shaders/common/header.glsl"

///////////////////////////////////////////////////////////////////////////////
// input
///////////////////////////////////////////////////////////////////////////////
layout(location = 0) in vec3 gua_in_position;
layout(location = 2) in vec2 gua_in_texcoord;

///////////////////////////////////////////////////////////////////////////////
// general uniforms
///////////////////////////////////////////////////////////////////////////////
@include "shaders/uber_shaders/common/gua_camera_uniforms.glsl"

uniform uint gua_material_id;

// material specific uniforms
@uniform_definition

///////////////////////////////////////////////////////////////////////////////
// output
///////////////////////////////////////////////////////////////////////////////
out vec3 gua_position_varying;
out vec2 gua_quad_coords;

@output_definition

///////////////////////////////////////////////////////////////////////////////
// methods
///////////////////////////////////////////////////////////////////////////////

uint gua_get_material_id() {
  return gua_uint_gbuffer_varying_0.x;
}

///////////////////////////////////////////////////////////////////////////////
// main
///////////////////////////////////////////////////////////////////////////////
void main() {

  gua_position_varying = vec3(0.0);
  gua_quad_coords = gua_in_texcoord;

  gua_uint_gbuffer_varying_0.x = gua_material_id;
  gl_Position = vec4(gua_in_position, 1.0);
}

